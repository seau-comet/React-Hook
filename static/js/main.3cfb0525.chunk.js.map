{"version":3,"sources":["apiServices.js","App.js","index.js"],"names":["fetchData","a","axios","get","res","status","data","fetchOne","id","editData","text","myObj","name","address","Date","patch","deleteData","delete","addData","post","App","useState","modal","setModal","edit","setEdit","margin","setMargin","lists","setLists","list","setList","addLoading","setAddLoading","editLoading","setEditLoading","cancelLoading","setCancelLoading","update","setUpdate","textRef","useRef","toggle","checkNote","e","preventDefault","temp","editList","deleteList","addList","current","value","fetchLists","useEffect","then","className","Button","color","onClick","Spinner","as","animation","size","role","aria-hidden","style","marginBottom","length","position","top","left","map","index","key","suppressContentEditableWarning","contentEditable","placeholder","onFocus","target","innerText","onBlur","_id","data-toggle","data-placement","title","data-animation","data-container","Modal","isOpen","ModalHeader","ModalBody","ref","rows","ModalFooter","backgroundColor","paddingBottom","bottom","width","height","block","substr","ReactDOM","render","Fragment","document","getElementById"],"mappings":"0SACaA,EAAS,uCAAG,4BAAAC,EAAA,sEACPC,IAAMC,IAAI,gDADH,UAEJ,OADfC,EADmB,QAEfC,OAFe,yCAGd,UAHc,gCAKhBD,EAAIE,MALY,2CAAH,qDAQTC,EAAQ,uCAAG,WAAOC,GAAP,eAAAP,EAAA,sEACNC,IAAMC,IAAN,sDACiCK,IAF3B,UAIH,OAHfJ,EADkB,QAIdC,OAJc,yCAKb,UALa,gCAOfD,EAAIE,MAPW,2CAAH,sDAURG,EAAQ,uCAAG,WAAOD,EAAIE,GAAX,eAAAT,EAAA,6DAClBU,EAAQ,CACVC,KAAMF,EACNG,QAASC,QAHW,SAKNZ,IAAMa,MAAN,sDACiCP,GAC/CG,GAPoB,UASH,MATG,OASdN,OATc,yCAUb,UAVa,gCAYfM,GAZe,2CAAH,wDAgBRK,EAAU,uCAAG,WAAOR,GAAP,SAAAP,EAAA,sEACRC,IAAMe,OAAN,wDACmCT,IAF3B,UAIL,MAJK,OAIhBH,OAJgB,yCAKfG,GALe,gCAOf,UAPe,2CAAH,sDAUVU,EAAO,uCAAG,WAAOR,GAAP,iBAAAT,EAAA,6DACjBU,EAAQ,CACVC,KAAMF,EACNG,QAASC,QAHU,SAKLZ,IAAMiB,KAAN,6CAEdR,GAPmB,UASF,OAJfP,EALiB,QASbC,OATa,yCAUZ,UAVY,gCAYdD,EAAIE,MAZU,2CAAH,sDC0LLc,MAtNf,WAAgB,IAAD,EACaC,oBAAS,GADtB,mBACNC,EADM,KACCC,EADD,OAEWF,oBAAS,GAFpB,mBAENG,EAFM,KAEAC,EAFA,OAGeJ,mBAAS,OAHxB,mBAGNK,EAHM,KAGEC,EAHF,OAIaN,mBAAS,CAAEhB,QAAQ,EAAOC,KAAM,KAJ7C,mBAINsB,EAJM,KAICC,EAJD,OAKWR,mBAAS,IALpB,mBAKNS,EALM,KAKAC,EALA,OAMuBV,oBAAS,GANhC,mBAMNW,EANM,KAMMC,EANN,OAOyBZ,oBAAS,GAPlC,mBAONa,EAPM,KAOOC,EAPP,OAQ6Bd,oBAAS,GARtC,mBAQNe,EARM,KAQSC,EART,OASehB,qBATf,mBASNiB,EATM,KASEC,EATF,KAUPC,EAAUC,mBACVC,EAAS,WACbnB,GAAUD,IAENqB,GAAS,uCAAG,WAAOC,GAAP,eAAA3C,EAAA,6DAChB2C,EAAEC,iBACFR,GAAiB,GAFD,SAGC9B,EAASuB,EAAKtB,IAHf,OAIH,YADTsC,EAHY,UAKdT,GAAiB,GACbS,EAAK,GAAGlC,OAASkB,EAAKpB,MACxB6B,EAAUT,GAEZL,GAAQ,IATM,2CAAH,sDAYTsB,GAAQ,uCAAG,WAAOH,GAAP,SAAA3C,EAAA,6DACf2C,EAAEC,iBACFV,GAAe,GAFA,SAGE1B,EAASqB,EAAKtB,GAAIsB,EAAKpB,MAHzB,OAIF,WAJE,SAMbyB,GAAe,GACfV,GAAQ,IAPK,2CAAH,sDAURuB,GAAU,uCAAG,WAAOJ,GAAP,eAAA3C,EAAA,6DACjB2C,EAAEC,iBADe,SAEA7B,EAAWc,EAAKtB,IAFhB,OAGJ,YADTsC,EAFa,UAIfP,EAAUO,GACVrB,GAAQ,IALO,2CAAH,sDAQVwB,GAAO,uCAAG,WAAOL,GAAP,eAAA3C,EAAA,6DACd2C,EAAEC,iBACFZ,GAAc,GAFA,SAGEf,EAAQsB,EAAQU,QAAQC,OAH1B,OAIF,YADR/C,EAHU,UAKZ6B,GAAc,GACdM,EAAUnC,GACVmB,GAAS,IAPG,2CAAH,sDAUP6B,GAAU,uCAAG,4BAAAnD,EAAA,sEACAD,IADA,cACbM,EADa,yBAEVA,GAFU,2CAAH,qDAWhB,OAPA+C,qBAAU,WACRxB,EAAS,CAAExB,QAAQ,EAAOC,KAAM,KACrB8C,KACNE,MAAK,SAAChD,GACTuB,EAAS,CAAExB,QAAQ,EAAMC,KAAMA,SAEhC,CAACgC,IAEF,yBAAKiB,UAAU,OACb,yBAAKA,UAAU,8BACb,0BAAMA,UAAU,eAAhB,cACC/B,EACC,kBAACgC,EAAA,EAAD,CAAQC,MAAM,UAAUF,UAAU,aAAaG,QAASf,IACrDP,EACC,kBAACuB,EAAA,EAAD,CACEJ,UAAU,aACVK,GAAG,OACHC,UAAU,OACVC,KAAK,KACLC,KAAK,SACLC,cAAY,SAEZ,KAVN,UAcA,kBAACR,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAShB,GAAjC,aAKJ,wBACEa,UAAU,8BACVU,MAAO,CAAEC,aAAcxC,IAEA,IAAtBE,EAAMtB,KAAK6D,QACO,IAAjBvC,EAAMvB,OACJ,yBAAK4D,MAAO,CAAEG,SAAU,WAAYC,IAAK,MAAOC,KAAM,QACpD,yBAAKf,UAAU,iBAAiBQ,KAAK,UACnC,0BAAMR,UAAU,WAAhB,gBAIJ,yBAAKU,MAAO,CAAEG,SAAU,WAAYC,IAAK,MAAOC,KAAM,QAAtD,cAKF1C,EAAMtB,KAAKiE,KAAI,SAACpB,EAAOqB,GACrB,OACE,wBACEC,IAAKD,EACLjB,UAAU,qCACVmB,gCAAgC,EAChCC,iBAAiB,EACjBC,YAAY,4BACZC,QAAS,SAACjC,GACRA,EAAEC,iBACFpB,GAAQ,GACRM,EAAQ,CACNrB,KAAMkC,EAAEkC,OAAOC,YAEjBpD,EAAU,SAEZqD,OAAQ,SAACpC,GACPA,EAAEC,iBACFd,EAAQ,CACNvB,GAAI2C,EAAM8B,IACVvE,KAAMkC,EAAEkC,OAAOC,aAGnBG,cAAY,UACZC,iBAAe,MACfC,MAAM,iBACNC,kBAAgB,EAChBC,kBAAgB,GAEfnC,EAAMvC,UAMjB,kBAAC2E,EAAA,EAAD,CAAOC,OAAQlE,EAAOoB,OAAQA,GAC5B,kBAAC+C,EAAA,EAAD,CAAa/C,OAAQA,GAArB,mBACA,kBAACgD,EAAA,EAAD,KACE,yBAAKnC,UAAU,cACb,8BACEoC,IAAKnD,EACLe,UAAU,eACVqB,YAAY,qBACZpE,GAAG,8BACHoF,KAAK,QAIX,kBAACC,EAAA,EAAD,KACE,kBAACrC,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAST,IAC9BjB,EACC,kBAAC2B,EAAA,EAAD,CACEJ,UAAU,OACVK,GAAG,OACHC,UAAU,OACVC,KAAK,KACLC,KAAK,SACLC,cAAY,SAEZ,KAVN,OAYU,IACV,kBAACR,EAAA,EAAD,CAAQC,MAAM,YAAYC,QAAShB,GAAnC,YAMHlB,EACC,yBAAKyC,MAAO,CAAE6B,gBAAiB,SAC7B,yBACEvC,UAAU,iCACVU,MAAO,CACL8B,cAAe,OACf3B,SAAU,QACV4B,OAAQ,MACRC,MAAO,OACPC,OAAQ,OACRxE,OAAQ,QAGV,yBAAK6B,UAAU,OACb,kBAACC,EAAA,EAAD,CAAQC,MAAM,SAAS0C,OAAK,EAACzC,QAASV,IAAtC,UACUlB,EAAKpB,KAAKyD,OAAS,EAAIrC,EAAKpB,KAAK0F,OAAO,EAAE,GAAItE,EAAKpB,KAD7D,QAIF,yBAAK6C,UAAU,OACb,kBAACC,EAAA,EAAD,CAAQC,MAAM,UAAU0C,OAAK,EAACzC,QAASX,IACpCb,EACC,kBAACyB,EAAA,EAAD,CACEJ,UAAU,OACVK,GAAG,OACHC,UAAU,OACVC,KAAK,KACLC,KAAK,SACLC,cAAY,SAEZ,KAVN,WAgBJ,O,MC3NVqC,IAASC,OACP,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.3cfb0525.chunk.js","sourcesContent":["import axios from \"axios\";\r\nexport const fetchData = async () => {\r\n  var res = await axios.get(\"https://api-hook-101.herokuapp.com/api/lists\");\r\n  if (res.status !== 200) {\r\n    return \"failed\";\r\n  }\r\n  return res.data;\r\n};\r\n\r\nexport const fetchOne = async (id) => {\r\n  var res = await axios.get(\r\n    `https://api-hook-101.herokuapp.com/api/list/${id}`\r\n  );\r\n  if (res.status !== 200) {\r\n    return \"failed\";\r\n  }\r\n  return res.data;\r\n};\r\n\r\nexport const editData = async (id, text) => {\r\n  let myObj = {\r\n    name: text,\r\n    address: Date(),\r\n  };\r\n  var res = await axios.patch(\r\n    `https://api-hook-101.herokuapp.com/api/edit/${id}`,\r\n    myObj\r\n  );\r\n  if (res.status !== 200) {\r\n    return \"failed\";\r\n  }\r\n  return myObj;\r\n};\r\n// `https://api-hook-101.herokuapp.com/api/delete/${id}`\r\n\r\nexport const deleteData = async (id) => {\r\n  var res = await axios.delete(\r\n    `https://api-hook-101.herokuapp.com/api/delete/${id}`\r\n  );\r\n  if (res.status === 200) {\r\n    return id;\r\n  } else {\r\n    return \"failed\";\r\n  }\r\n};\r\nexport const addData = async (text) => {\r\n  let myObj = {\r\n    name: text,\r\n    address: Date(),\r\n  };\r\n  var res = await axios.post(\r\n    `https://api-hook-101.herokuapp.com/api/add`,\r\n    myObj\r\n  );\r\n  if (res.status !== 200) {\r\n    return \"failed\";\r\n  }\r\n  return res.data;\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Spinner,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from \"reactstrap\";\nimport {\n  addData,\n  deleteData,\n  editData,\n  fetchData,\n  fetchOne,\n} from \"./apiServices\";\n\nfunction App() {\n  const [modal, setModal] = useState(false);\n  const [edit, setEdit] = useState(false);\n  const [margin, setMargin] = useState(\"0px\");\n  const [lists, setLists] = useState({ status: false, data: [] });\n  const [list, setList] = useState({});\n  const [addLoading, setAddLoading] = useState(false);\n  const [editLoading, setEditLoading] = useState(false);\n  const [cancelLoading, setCancelLoading] = useState(false);\n  const [update, setUpdate] = useState();\n  const textRef = useRef();\n  const toggle = () => {\n    setModal(!modal);\n  };\n  const checkNote = async (e) => {\n    e.preventDefault();\n    setCancelLoading(true);\n    var temp = await fetchOne(list.id);\n    if (temp !== \"failed\") {\n      setCancelLoading(false);\n      if (temp[0].name !== list.text) {\n        setUpdate(list);\n      }\n      setEdit(false);\n    }\n  };\n  const editList = async (e) => {\n    e.preventDefault();\n    setEditLoading(true);\n    var temp = await editData(list.id, list.text);\n    if (temp !== \"failed\") {\n      // setUpdate(temp);\n      setEditLoading(false);\n      setEdit(false);\n    }\n  };\n  const deleteList = async (e) => {\n    e.preventDefault();\n    var temp = await deleteData(list.id);\n    if (temp !== \"failed\") {\n      setUpdate(temp);\n      setEdit(false);\n    }\n  };\n  const addList = async (e) => {\n    e.preventDefault();\n    setAddLoading(true);\n    var res = await addData(textRef.current.value);\n    if (res !== \"failed\") {\n      setAddLoading(false);\n      setUpdate(res);\n      setModal(false);\n    }\n  };\n  const fetchLists = async () => {\n    var data = await fetchData();\n    return data;\n  };\n  useEffect(() => {\n    setLists({ status: false, data: [] });\n    var temp = fetchLists();\n    temp.then((data) => {\n      setLists({ status: true, data: data });\n    });\n  }, [update]);\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <span className=\"navbar-text\">React Hook</span>\n        {edit ? (\n          <Button color=\"warning\" className=\"text-white\" onClick={checkNote}>\n            {cancelLoading ? (\n              <Spinner\n                className=\"mr-2 white\"\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              />\n            ) : null}\n            Cancel\n          </Button>\n        ) : (\n          <Button color=\"success\" onClick={toggle}>\n            Add List\n          </Button>\n        )}\n      </nav>\n      <ul\n        className=\"list-group list-group-flush\"\n        style={{ marginBottom: margin }}\n      >\n        {lists.data.length === 0 ? (\n          lists.status === false ? (\n            <div style={{ position: \"absolute\", top: \"50%\", left: \"50%\" }}>\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            </div>\n          ) : (\n            <div style={{ position: \"absolute\", top: \"50%\", left: \"50%\" }}>\n              empty list\n            </div>\n          )\n        ) : (\n          lists.data.map((value, index) => {\n            return (\n              <li\n                key={index}\n                className=\"list-group-item bg-light text-dark\"\n                suppressContentEditableWarning={true}\n                contentEditable={true}\n                placeholder=\"Double click for deleting\"\n                onFocus={(e) => {\n                  e.preventDefault();\n                  setEdit(true);\n                  setList({\n                    text: e.target.innerText,\n                  });\n                  setMargin(\"60px\");\n                }}\n                onBlur={(e) => {\n                  e.preventDefault();\n                  setList({\n                    id: value._id,\n                    text: e.target.innerText,\n                  });\n                }}\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title=\"Tooltip on top\"\n                data-animation={false}\n                data-container={true}\n              >\n                {value.name}\n              </li>\n            );\n          })\n        )}\n      </ul>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Enter your list</ModalHeader>\n        <ModalBody>\n          <div className=\"form-group\">\n            <textarea\n              ref={textRef}\n              className=\"form-control\"\n              placeholder=\"type something ...\"\n              id=\"exampleFormControlTextarea1\"\n              rows=\"3\"\n            ></textarea>\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={addList}>\n            {addLoading ? (\n              <Spinner\n                className=\"mr-2\"\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              />\n            ) : null}\n            add\n          </Button>{\" \"}\n          <Button color=\"secondary\" onClick={toggle}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n\n      {edit ? (\n        <div style={{ backgroundColor: \"gray\" }}>\n          <div\n            className=\"bg.dark row align-items-center\"\n            style={{\n              paddingBottom: \"10px\",\n              position: \"fixed\",\n              bottom: \"0px\",\n              width: \"100%\",\n              height: \"50px\",\n              margin: \"0px\",\n            }}\n          >\n            <div className=\"col\">\n              <Button color=\"danger\" block onClick={deleteList}>\n                Delete {list.text.length > 5 ? list.text.substr(0,4) :list.text}...\n              </Button>\n            </div>\n            <div className=\"col\">\n              <Button color=\"primary\" block onClick={editList}>\n                {editLoading ? (\n                  <Spinner\n                    className=\"mr-2\"\n                    as=\"span\"\n                    animation=\"grow\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                ) : null}\n                Edit\n              </Button>\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}